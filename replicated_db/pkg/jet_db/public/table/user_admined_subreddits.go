//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var UserAdminedSubreddits = newUserAdminedSubredditsTable("public", "user_admined_subreddits", "")

type userAdminedSubredditsTable struct {
	postgres.Table

	// Columns
	UserHandle      postgres.ColumnString
	SubredditHandle postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type UserAdminedSubredditsTable struct {
	userAdminedSubredditsTable

	EXCLUDED userAdminedSubredditsTable
}

// AS creates new UserAdminedSubredditsTable with assigned alias
func (a UserAdminedSubredditsTable) AS(alias string) *UserAdminedSubredditsTable {
	return newUserAdminedSubredditsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new UserAdminedSubredditsTable with assigned schema name
func (a UserAdminedSubredditsTable) FromSchema(schemaName string) *UserAdminedSubredditsTable {
	return newUserAdminedSubredditsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new UserAdminedSubredditsTable with assigned table prefix
func (a UserAdminedSubredditsTable) WithPrefix(prefix string) *UserAdminedSubredditsTable {
	return newUserAdminedSubredditsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new UserAdminedSubredditsTable with assigned table suffix
func (a UserAdminedSubredditsTable) WithSuffix(suffix string) *UserAdminedSubredditsTable {
	return newUserAdminedSubredditsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newUserAdminedSubredditsTable(schemaName, tableName, alias string) *UserAdminedSubredditsTable {
	return &UserAdminedSubredditsTable{
		userAdminedSubredditsTable: newUserAdminedSubredditsTableImpl(schemaName, tableName, alias),
		EXCLUDED:                   newUserAdminedSubredditsTableImpl("", "excluded", ""),
	}
}

func newUserAdminedSubredditsTableImpl(schemaName, tableName, alias string) userAdminedSubredditsTable {
	var (
		UserHandleColumn      = postgres.StringColumn("user_handle")
		SubredditHandleColumn = postgres.StringColumn("subreddit_handle")
		allColumns            = postgres.ColumnList{UserHandleColumn, SubredditHandleColumn}
		mutableColumns        = postgres.ColumnList{}
	)

	return userAdminedSubredditsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		UserHandle:      UserHandleColumn,
		SubredditHandle: SubredditHandleColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
